library(tidyverse)
library(nycflights13)
# flights
# weather
library(lubridate)
weather %>% mutate(day_of_year = yday(time_hour))
# one for each airport in the weather data
one <- weather %>% mutate(day_of_year = yday(time_hour)) %>%
filter(origin = "EWR")
# one for each airport in the weather data
one <- weather %>% mutate(day_of_year = yday(time_hour)) %>%
filter(origin == "EWR")
one
# add column that counts number of day of the year (2013)
weather %>% mutate(day_of_year = yday(time_hour))
str(weather)
# add column that counts number of day of the year (2013)
weather %>% mutate(day_of_year = yday(time_hour))
# add column that counts number of day of the year (2013)
weather %>% mutate(day_of_year = yday(time_hour))
view(weather)
JFK <- weather %>% mutate(day_of_year = yday(time_hour)) %>%
filter(origin == "JFK")
JFK
view(weather)
LGA <- weather %>% mutate(day_of_year = yday(time_hour)) %>%
filter(origin == "LGA")
weather %>% mutate(day_of_year = yday(time_hour)) %>% group_by(origin)
weather %>% mutate(day_of_year = yday(time_hour)) %>% group_by(origin) %>% summarize(meanTemp = mean(temp, na.rm = T))
weather %>% mutate(day_of_year = yday(time_hour)) %>% select(temp, day_of_year, origin) %>% group_by(origin) %>% summarize(meanTemp = mean(temp, na.rm = T))
weather %>% mutate(day_of_year = yday(time_hour)) %>% group_by(origin) %>% summarize(meanTemp = mean(temp, na.rm = T)) %>%
ggplot()+geom_line(aes(x = day_of_year, y = meanTemp, col = origin))
weather %>% mutate(day_of_year = yday(time_hour)) %>% group_by(origin, day_of_year) %>% summarize(meanTemp = mean(temp, na.rm = T)) %>%
ggplot()+geom_line(aes(x = day_of_year, y = meanTemp, col = origin))
weather %>% mutate(day_of_year = yday(time_hour)) %>% group_by(origin, day_of_year) %>% summarize(meanTemp = mean(temp, na.rm = T))
rm(list =ls())
library(tidyr)
library(dplyr)
table1  # if this doesn't load, make sure you have the most recent versions of tidyr and dplyr.
table2
table3
table4a
table4b
table5
http://r4ds.had.co.nz/images/tidy-1.png
# check practice.R
# add column that counts number of day of the year (2013)
weather %>% mutate(day_of_year = yday(time_hour))
library(tidyverse)
library(nycflights13)
# flights
# weather
library(lubridate)
# check practice.R
# add column that counts number of day of the year (2013)
weather %>% mutate(day_of_year = yday(time_hour))
# one for each airport in the weather data
## view(weather) to check which airports present
# EWR <- weather %>% mutate(day_of_year = yday(time_hour)) %>%
#   filter(origin == "EWR")
#
# JFK <- weather %>% mutate(day_of_year = yday(time_hour)) %>%
#   filter(origin == "JFK")
#
# LGA <- weather %>% mutate(day_of_year = yday(time_hour)) %>%
#   filter(origin == "LGA")
# x-axis = day of the year (1:365)
# y-axis = mean temperature
# 1. change time_hour to day of year
# 2. group by origin and day of year -> ex) EWR-1 one group
# 3. ggplot with three lines for origin
weather %>% mutate(day_of_year = yday(time_hour)) %>% group_by(origin, day_of_year) %>% summarize(meanTemp = mean(temp, na.rm = T)) %>%
ggplot()+geom_line(aes(x = day_of_year, y = meanTemp, col = origin))
table1 %>%
mutate(rate = cases / population * 10000)
table1 %>%
count(year, wt = cases)
library(ggplot2)
weather %>% mutate(day_of_year = yday(time_hour)) %>% group_by(origin, day_of_year) %>% summarize(meanTemp = mean(temp, na.rm = T)) %>% facet_wrap(~origin)
ggplot() + geom_point(mapping = aes=(x=day_of_year, y = meanTemp, color = origin) %>% facet_wrap(~origin)
weather %>% mutate(day_of_year = yday(time_hour)) %>% group_by(origin, day_of_year) %>% summarize(meanTemp = mean(temp, na.rm = T)) %>%
ggplot() + geom_point(mapping = aes(x=day_of_year, y = meanTemp, color = origin) %>% facet_wrap(~origin)
weather %>% mutate(day_of_year = yday(time_hour)) %>% group_by(origin, day_of_year) %>% summarize(meanTemp = mean(temp, na.rm = T)) %>%
ggplot() + geom_point(mapping = aes(x=day_of_year, y = meanTemp, color = origin) %>% facet_wrap(~origin)
weather %>% mutate(day_of_year = yday(time_hour)) %>% group_by(origin, day_of_year) %>% summarize(meanTemp = mean(temp, na.rm = T)) %>%
ggplot() + geom_point(mapping = aes(x=day_of_year, y = meanTemp, color = origin)) %>% facet_wrap(~origin)
weatherQ1 <- weather %>% mutate(day_of_year = yday(time_hour)) %>% group_by(origin, day_of_year) %>% summarize(meanTemp = mean(temp, na.rm = T))
weatherQ1
ggplot(data = weatherQ1) + geom_point(mapping = aes(x=day_of_year, y = meanTemp, color = origin)) %>% facet_wrap(~origin)
weatherQ1
ggplot(data = weatherQ1) + geom_point(mapping = aes(x=day_of_year, y = meanTemp, color = origin)) %>% facet_wrap(~origin)
## make plot for each class
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow = 2)
mpg
weatherQ1 <- weather %>% mutate(day_of_year = yday(time_hour)) %>% group_by(origin, day_of_year) %>% summarize(meanTemp = mean(temp, na.rm = T))
ggplot(data = weatherQ1) + geom_point(mapping = aes(x= as.integer( day_of_year), y = meanTemp, color = origin)) %>% facet_wrap(~origin)
str(weatherQ1)
ggplot(data = weatherQ1) + geom_point(mapping = aes(x= as.integer(day_of_year), y = meanTemp, color = origin)) + facet_wrap(~origin)
ggplot(data = weatherQ1) + geom_point(mapping = aes(x= as.integer(day_of_year), y = meanTemp, color = origin)) + facet_wrap(origin~.)
ggplot(data = weatherQ1) + geom_point(mapping = aes(x= as.integer(day_of_year), y = meanTemp, color = origin)) + facet_wrap(origin)
~
ggplot(data = weatherQ1) + geom_point(mapping = aes(x= as.integer(day_of_year), y = meanTemp, color = origin)) + facet_wrap(~origin)
ggplot(data = weatherQ1) + geom_point(mapping = aes(x= as.integer(day_of_year), y = meanTemp, color = origin)) + facet_wrap(~origin)
weatherQ1 <- weather %>% mutate(day_of_year = yday(time_hour)) %>% group_by(origin, day_of_year) %>% summarize(meanTemp = mean(temp, na.rm = T))
str(weatherQ1)
ggplot(data = weatherQ1) + geom_point(mapping = aes(x= day_of_year, y = meanTemp, color = origin)) + facet_wrap(~origin)
weather
weather %>%
pivot_longer(c("EWR", "JFK", "LGA"), names_to = "airport", values_to = "day_of_year")
tidy4a <- table4a %>%
pivot_longer(c(`1999`, `2000`), names_to = "year", values_to = "cases")
tidy4a
# Check organizing.R
# row = airport
# col = day of the year
weather %>% mutate(day_of_year = yday(time_hour)) %>%
pivot_longer(c("EWR", "JFK", "LGA"), names_to = "airport", values_to = "day_of_year")
weather %>% mutate(day_of_year = yday(time_hour)) %>%
pivot_longer(c('EWR', 'JFK', 'LGA'), names_to = "airport", values_to = "day_of_year")
tidy4a <- table4a %>%
pivot_longer(c(`1999`, `2000`), names_to = "year", values_to = "cases")
tidy4a
table4a
table4b
# what changes:
stocks <- tibble(
year   = c(2015, 2015, 2016, 2016),
half  = c(   1,    2,     1,    2),
return = c(1.88, 0.59, 0.92, 0.17)
)
stocks
stocks %>%
pivot_wider(names_from = year, values_from = return) %>%
pivot_longer(`2015`:`2016`, names_to = "year", values_to = "return")
## MODIFIED version
stocks %>%
pivot_wider(names_from = half, values_from = return) %>%
pivot_longer(`1`:`2`, names_to = "half", values_to = "return")
stocks %>%
pivot_wider(names_from = year, values_from = return) %>%
pivot_longer(`2015`:`2016`, names_to = "year", values_to = "return")
stocks
stocks %>%
pivot_wider(names_from = year, values_from = return)
weather %>% mutate(day_of_year = yday(time_hour)) %>%
pivot_wider(names_from = day_of_year, values_from = origin)
stocks %>%
pivot_wider(names_from = year, values_from = return) %>%
pivot_longer(`2015`:`2016`, names_to = "year", values_to = "return")
## because year is char
table4a %>%
pivot_longer(c('1999', '2000'), names_to = "year", values_to = "cases")
#  is this data tidy?  why doesn't it pivot_wider?
people <- tribble(
~name,             ~key,    ~value,
#-----------------|--------|------
"Phillip Woods",   "age",       45,
"Phillip Woods",   "height",   186,
"Phillip Woods",   "age",       50,
"Jessica Cordero", "age",       37,
"Jessica Cordero", "height",   156
)
people
pivot_wider(people, names_from = key, values_from = value)
pivot_wider(people, names_from = key, values_from = value)
table3
table3 %>%
separate(rate, into = c("cases", "population"))  # sep is a regular expression!
# how many missing values?
stocks <- tibble(
year   = c(2015, 2015, 2015, 2015, 2016, 2016, 2016),
qtr    = c(   1,    2,    3,    4,    2,    3,    4),
return = c(1.88, 0.59, 0.35,   NA, 0.92, 0.17, 2.66)
)
stocks
# how many missing values? -> 2, since 2016, 1 is missing
stocks %>% pivot_wider(names_from = qtr,values_from = return)
weather %>% mutate(day_of_year = yday(time_hour)) %>%
pivot_wider(names_from = day_of_year, values_from = origin)
weather %>% mutate(day_of_year = yday(time_hour)) %>% mutate(meanTemp = mean(temp, na.rm = T)) %>%
pivot_wider(names_from = day_of_year, values_from = mean)
weather %>% mutate(day_of_year = yday(time_hour)) %>% mutate(meanTemp = mean(temp, na.rm = T)) %>%
pivot_wider(names_from = day_of_year, values_from = meanTemp)
weather %>% mutate(day_of_year = yday(time_hour)) %>% mutate(meanTemp = mean(temp, na.rm = T))
weatherQ1
weatherQ1 %>% pivot_wider(names_from = day_of_year, values_from = meanTemp)
weather
flights
sum(dep_delay < 1)
flights %>% sum(dep_delay < 1)
flights
flights %>% sum(dep_delay < 1)
sum(flights$dep_delay < 1)
count(flights$dep_delay <1)
(flights$dep_delay <1)
flights %>% mutate(day_of_year = yday(time_hour)) %>% group_by(dest, day_of_year) %>% summarise(performance = (length(dep_delay[dep_delay < 1]))/ length(dep_delay))
length(dep_delay)
length(flights$dep_delay)
flights %>% mutate(day_of_year = yday(time_hour)) %>% group_by(dest, day_of_year) %>% summarise(performance = (length(dep_delay[dep_delay < 1]))/ n())
flights %>% mutate(day_of_year = yday(time_hour)) %>%
mutate(performance = length(dep_delay[dep_delay < 1]))
flights %>% mutate(day_of_year = yday(time_hour)) %>%
mutate(performance = dep_delay[dep_delay < 1])
flights %>% mutate(day_of_year = yday(time_hour)) %>%
mutate(performance = dep_delay<1) %>% group_by(dest, day_of_year)
flights %>% mutate(day_of_year = yday(time_hour)) %>%
mutate(performance = dep_delay<1)
# data
flights
# dep_delay = departure delays in minutes
## dep_delay < 1
flights %>% mutate(day_of_year = yday(time_hour)) %>%
mutate(dep_less_delay = dep_delay<1) %>% group_by(dest, day_of_year)
#summarise(performance = (length(dep_delay[dep_delay < 1]))/ n())
# each (airport, day)
# airport's performance = flights departed late < 1 hour
flights %>% mutate(day_of_year = yday(time_hour)) %>%
mutate(dep_less_delay = dep_delay<1) %>% group_by(dest, day_of_year)
flights %>% mutate(day_of_year = yday(time_hour)) %>%
group_by(dest, day_of_year) %>% mutate(dep_less_delay = dep_delay<1)
flights %>% mutate(day_of_year = yday(time_hour)) %>%
group_by(dest, day_of_year) %>% mutate(dep_less_delay = length(dep_delay<1))
flights %>% mutate(day_of_year = yday(time_hour)) %>%
group_by(dest, day_of_year) %>% mutate(dep_less_delay = length(dep_delay<1)) / length(dep_delay))
flights %>% mutate(day_of_year = yday(time_hour)) %>%
group_by(dest, day_of_year) %>% mutate(dep_less_delay = length(dep_delay<1)) / length(dep_delay)
flights %>% mutate(day_of_year = yday(time_hour)) %>%
group_by(dest, day_of_year) %>% mutate(dep_less_delay = length(dep_delay<1)) / num(dep_delay)
flights %>% mutate(day_of_year = yday(time_hour)) %>%
group_by(dest, day_of_year) %>% mutate(dep_less_delay = length(dep_delay<1)) / count(dep_delay)
flights %>% mutate(day_of_year = yday(time_hour)) %>%
group_by(dest, day_of_year)
flights %>% mutate(day_of_year = yday(time_hour)) %>%
group_by(dest, day_of_year) %>% mutate(dep_less_delay = length(dep_delay<1) / count(dep_delay))
flights %>% mutate(day_of_year = yday(time_hour)) %>%
group_by(dest, day_of_year) %>% mutate(dep_less_delay = length(dep_delay<1))
flights %>% mutate(day_of_year = yday(time_hour)) %>%
group_by(dest, day_of_year) %>% mutate(dep_less_delay = length(dep_delay<1) / length(dep_delay))
flights %>% mutate(day_of_year = yday(time_hour)) %>%
group_by(dest, day_of_year) %>% mutate(dep_less_delay = length(dep_delay<1)) %>%  mutate(length(dep_delay))
flights %>% mutate(day_of_year = yday(time_hour)) %>%
group_by(dest, day_of_year) %>% mutate(dep_less_delay = length(dep_delay<1)) %>%  mutate(total <- length(dep_delay))
flights
flights %>% mutate(day_of_year = yday(time_hour)) %>%
group_by(dest, day_of_year) %>% mutate(dep_less_delay = length(dep_delay<1)) %>%  mutate(total <- length(dep_delay))
flights %>% mutate(day_of_year = yday(time_hour)) %>%
group_by(dest, day_of_year) %>% mutate(dep_less_delay = length(dep_delay<1)) %>%  mutate(total = length(dep_delay))
flights %>% mutate(day_of_year = yday(time_hour)) %>%
group_by(dest, day_of_year) %>% summarise(performance = mean(dep_delay[dep_delay < 1]))
flights %>% mutate(day_of_year = yday(time_hour)) %>%
group_by(dest, day_of_year) %>% summarise(performance = (dep_delay[dep_delay < 1]) / dep_delay[dep_delay])
flights %>% mutate(day_of_year = yday(time_hour)) %>%
group_by(dest, day_of_year) %>% summarise(performance = (dep_delay[dep_delay < 1])/dep_delay[dep_delay])
flights %>% mutate(day_of_year = yday(time_hour)) %>%
group_by(dest, day_of_year) %>% summarise(count = n(), performance = (dep_delay[dep_delay < 1])/count)
flights %>% mutate(day_of_year = yday(time_hour)) %>%
group_by(dest, day_of_year) %>% summarise(count = n(),
noDelay = length(dep_delay[dep_delay < 1]),
performance = noDelay/count)
summarise(flight_data, count = n(), noDelay = length(dep_delay[dep_delay < 1]), performance = noDelay/count)
flights
by_dest <- group_by(flights, dest)
by_dest
by_dest <- group_by(flights, dest)
by_dest
by_dest <- group_by(dest,day_of_year)
by_dest <- flights %>%group_by(dest, day_of_year)
flight_data <- flights %>% mutate(day_of_year = yday(time_hour)) %>% group_by(dest, day_of_year)
flight_data
# data
flights
# dep_delay = departure delays in minutes
## dep_delay < 1
flight_data <- flights %>% mutate(day_of_year = yday(time_hour)) %>% group_by(dest, day_of_year)
delay <- summarise(flight_data, count = n(), noDelay = length(dep_delay[dep_delay < 1]), performance = noDelay/count)
#summarise(performance = (length(dep_delay[dep_delay < 1]))/ n())
# each (airport, day)
# airport's performance = flights departed late < 1 hour
delay
weather
flights
flights %>% group_by(dest, day)
flights %>% group_by(dest, day) %>% summarise(count = n(), noDelay = length(dep_delay[dep_delay < 1]), performance = noDelay / count)
perfData <- flights %>% group_by(dest, day) %>% summarise(count = n(), noDelay = length(dep_delay[dep_delay < 1]), performance = noDelay / count)
perfData
perfData %>% select(dest, day, performance)
perfData %>% select(dest, day, performance) %>%
pivot_wider(names_from = dest, values_from = performance)
weather
weather %>% group_by(origin, day) %>% summarise(totalPrecip = sum(precip),
minVisib = min(visib),
avgWind_speed = mean(wind_speed))
weather %>% mutate(day_of_year = yday(time_hour)) %>% group_by(origin, day_of_year) %>%
summarise(totalPrecip = sum(precip),
minVisib = min(visib),
avgWind_speed = mean(wind_speed))
flights
flights %>% mutate(day_of_year = yday(time_hour)) %>% group_by(origin, day_of_year) %>% summarise(count = n(), noDelay = length(dep_delay[dep_delay < 1]), performance = noDelay / count)
perfDataDay <- flights %>% mutate(day_of_year = yday(time_hour)) %>% group_by(origin, day_of_year) %>% summarise(count = n(), noDelay = length(dep_delay[dep_delay < 1]), performance = noDelay / count)
perfDataDay %>% select(dest, day, performance) %>%
pivot_wider(names_from = dest, values_from = performance)
perfDataDay <- flights %>% mutate(day_of_year = yday(time_hour)) %>% group_by(dest, day_of_year) %>% summarise(count = n(), noDelay = length(dep_delay[dep_delay < 1]), performance = noDelay / count)
perfDataDay
flights
perfDataDay %>% select(dest, day, performance) %>%
pivot_wider(names_from = dest, values_from = performance)
perfDataDay %>% select(dest, day_of_year, performance) %>%
pivot_wider(names_from = dest, values_from = performance)
table4b %>%
pivot_longer(c(`1999`, `2000`), names_to = "year", values_to = "population")
stocks %>%
pivot_wider(names_from = year, values_from = return) %>%
pivot_longer(`2015`:`2016`, names_to = "year", values_to = "return")
stocks %>%
pivot_wider(names_from = year, values_from = return)
stocks
tidy4a <- table4a %>%
pivot_longer(c(`1999`, `2000`), names_to = "year", values_to = "cases")
table4a  # columns are identifiers!
Q4.data %>% pivot_longer(c(totalPrecip, minVisib, avgWind_speed), names_to = "day_of_year", values_to = "origin")
## day = 1:365
Q4.data <- weather %>% mutate(day_of_year = yday(time_hour)) %>% group_by(origin, day_of_year) %>%
summarise(totalPrecip = sum(precip), minVisib = min(visib), avgWind_speed = mean(wind_speed))
Q4.data %>% pivot_longer(c(totalPrecip, minVisib, avgWind_speed), names_to = "day_of_year", values_to = "origin")
table4a %>%
pivot_longer(c(`1999`, `2000`), names_to = "year", values_to = "cases")
table4a  # columns are identifiers!
table4a %>%
pivot_longer(c(`1999`, `2000`), names_to = "year", values_to = "cases")
Q4.data
#Separate splits one column into two different columns
table3
table3 %>%
separate(year, into = c("century", "year"), sep = 3)  #  notice the difference between this line and the last...
weather
perfDataDay %>% select(dest, day_of_year, performance) %>%
pivot_wider(names_from = dest, values_from = performance)
perfDataDay <- flights %>% mutate(day_of_year = yday(time_hour)) %>% group_by(dest, day_of_year) %>% summarise(count = n(), noDelay = length(dep_delay[dep_delay < 1]), performance = noDelay / count)
perfDataDay
perfDataDay
Q5.model <- lm(performance ~ dest + day_of_year ,data = perfDataDay)
Q5.model
summary(Q5.model)
weather
weather
# create weather summaries
perfDataDay
perfDataDay
flights
perfDataDay <- flights %>% mutate(day_of_year = yday(time_hour)) %>% group_by(origin, day_of_year) %>% summarise(count = n(), noDelay = length(dep_delay[dep_delay < 1]), performance = noDelay / count)
perfDataDay %>% select(origin, day_of_year, performance) %>%
pivot_wider(names_from = origin, values_from = performance)
perfDataDay
perfDataDay %>% select(origin, day_of_year, performance) %>%
pivot_wider(names_from = origin, values_from = performance)
performanceData <- perfDataDay %>% select(origin, day_of_year, performance) %>%
pivot_wider(names_from = origin, values_from = performance)
performanceData
performanceData
Q4.data
perfDataDay <- flights %>% mutate(day_of_year = yday(time_hour)) %>% group_by(origin, day_of_year) %>% summarise(count = n(), noDelay = length(dep_delay[dep_delay < 1]), performance = noDelay / count)
perfDataDay
Q3.data <- perfDataDay %>% select(origin, day_of_year, performance)
Q3.data <- perfDataDay %>% select(origin, day_of_year, performance)
Q3.data
Q3.data
Q4.data
# create weather summaries
## left join
Q4.data %>% left_join(Q3.data, by = c("origin", "day_of_year"))
# create weather summaries
## left join
Q5.data <- Q4.data %>% left_join(Q3.data, by = c("origin", "day_of_year"))
Q5.data
Q5.model <- lm(performance ~ totalPrecip + minVisib + avgWind_speed, data = Q5.data)
summary(Q5.model)
## data = weather
# (airport, day)
# weather summaries
# fixed effect of each airport
# create weather summaries
## left join
Q5.data <- Q4.data %>% left_join(Q3.data, by = c("origin", "day_of_year"))
Q5.model <- lm(performance ~ totalPrecip + minVisib + avgWind_speed, data = Q5.data)
summary(Q5.model)
################### include day & origin??? ###########
##################fixed effect??#######################
Q5.data %>% select(origin[origin=="EXR"])
Q5.data %>% mutate(EWR = origin[origin=="EWR"])
Q5.data %>% select(EWR = origin[origin=="EWR"])
Q5.data %>% filter(origin == "EWR")
